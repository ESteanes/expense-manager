/*
Up API

The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package upclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AttachmentResourceAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentResourceAttributes{}

// AttachmentResourceAttributes struct for AttachmentResourceAttributes
type AttachmentResourceAttributes struct {
	// The date-time when the file was created. 
	CreatedAt NullableTime `json:"createdAt"`
	// A temporary link to download the file. 
	FileURL NullableString `json:"fileURL"`
	// The date-time at which the `fileURL` link expires. 
	FileURLExpiresAt time.Time `json:"fileURLExpiresAt"`
	// File extension for the uploaded attachment. 
	FileExtension NullableString `json:"fileExtension"`
	// Content type for the uploaded attachment. 
	FileContentType NullableString `json:"fileContentType"`
}

type _AttachmentResourceAttributes AttachmentResourceAttributes

// NewAttachmentResourceAttributes instantiates a new AttachmentResourceAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentResourceAttributes(createdAt NullableTime, fileURL NullableString, fileURLExpiresAt time.Time, fileExtension NullableString, fileContentType NullableString) *AttachmentResourceAttributes {
	this := AttachmentResourceAttributes{}
	this.CreatedAt = createdAt
	this.FileURL = fileURL
	this.FileURLExpiresAt = fileURLExpiresAt
	this.FileExtension = fileExtension
	this.FileContentType = fileContentType
	return &this
}

// NewAttachmentResourceAttributesWithDefaults instantiates a new AttachmentResourceAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentResourceAttributesWithDefaults() *AttachmentResourceAttributes {
	this := AttachmentResourceAttributes{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *AttachmentResourceAttributes) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttachmentResourceAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *AttachmentResourceAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// GetFileURL returns the FileURL field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AttachmentResourceAttributes) GetFileURL() string {
	if o == nil || o.FileURL.Get() == nil {
		var ret string
		return ret
	}

	return *o.FileURL.Get()
}

// GetFileURLOk returns a tuple with the FileURL field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttachmentResourceAttributes) GetFileURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileURL.Get(), o.FileURL.IsSet()
}

// SetFileURL sets field value
func (o *AttachmentResourceAttributes) SetFileURL(v string) {
	o.FileURL.Set(&v)
}

// GetFileURLExpiresAt returns the FileURLExpiresAt field value
func (o *AttachmentResourceAttributes) GetFileURLExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.FileURLExpiresAt
}

// GetFileURLExpiresAtOk returns a tuple with the FileURLExpiresAt field value
// and a boolean to check if the value has been set.
func (o *AttachmentResourceAttributes) GetFileURLExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileURLExpiresAt, true
}

// SetFileURLExpiresAt sets field value
func (o *AttachmentResourceAttributes) SetFileURLExpiresAt(v time.Time) {
	o.FileURLExpiresAt = v
}

// GetFileExtension returns the FileExtension field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AttachmentResourceAttributes) GetFileExtension() string {
	if o == nil || o.FileExtension.Get() == nil {
		var ret string
		return ret
	}

	return *o.FileExtension.Get()
}

// GetFileExtensionOk returns a tuple with the FileExtension field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttachmentResourceAttributes) GetFileExtensionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileExtension.Get(), o.FileExtension.IsSet()
}

// SetFileExtension sets field value
func (o *AttachmentResourceAttributes) SetFileExtension(v string) {
	o.FileExtension.Set(&v)
}

// GetFileContentType returns the FileContentType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AttachmentResourceAttributes) GetFileContentType() string {
	if o == nil || o.FileContentType.Get() == nil {
		var ret string
		return ret
	}

	return *o.FileContentType.Get()
}

// GetFileContentTypeOk returns a tuple with the FileContentType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttachmentResourceAttributes) GetFileContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileContentType.Get(), o.FileContentType.IsSet()
}

// SetFileContentType sets field value
func (o *AttachmentResourceAttributes) SetFileContentType(v string) {
	o.FileContentType.Set(&v)
}

func (o AttachmentResourceAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentResourceAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt.Get()
	toSerialize["fileURL"] = o.FileURL.Get()
	toSerialize["fileURLExpiresAt"] = o.FileURLExpiresAt
	toSerialize["fileExtension"] = o.FileExtension.Get()
	toSerialize["fileContentType"] = o.FileContentType.Get()
	return toSerialize, nil
}

func (o *AttachmentResourceAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"fileURL",
		"fileURLExpiresAt",
		"fileExtension",
		"fileContentType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAttachmentResourceAttributes := _AttachmentResourceAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAttachmentResourceAttributes)

	if err != nil {
		return err
	}

	*o = AttachmentResourceAttributes(varAttachmentResourceAttributes)

	return err
}

type NullableAttachmentResourceAttributes struct {
	value *AttachmentResourceAttributes
	isSet bool
}

func (v NullableAttachmentResourceAttributes) Get() *AttachmentResourceAttributes {
	return v.value
}

func (v *NullableAttachmentResourceAttributes) Set(val *AttachmentResourceAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentResourceAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentResourceAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentResourceAttributes(val *AttachmentResourceAttributes) *NullableAttachmentResourceAttributes {
	return &NullableAttachmentResourceAttributes{value: val, isSet: true}
}

func (v NullableAttachmentResourceAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentResourceAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


