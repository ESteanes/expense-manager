/*
Up API

The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package upclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetAttachmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAttachmentResponse{}

// GetAttachmentResponse Successful response to get a single attachment.
type GetAttachmentResponse struct {
	// The attachment returned in this response.
	Data AttachmentResource `json:"data"`
}

type _GetAttachmentResponse GetAttachmentResponse

// NewGetAttachmentResponse instantiates a new GetAttachmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAttachmentResponse(data AttachmentResource) *GetAttachmentResponse {
	this := GetAttachmentResponse{}
	this.Data = data
	return &this
}

// NewGetAttachmentResponseWithDefaults instantiates a new GetAttachmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAttachmentResponseWithDefaults() *GetAttachmentResponse {
	this := GetAttachmentResponse{}
	return &this
}

// GetData returns the Data field value
func (o *GetAttachmentResponse) GetData() AttachmentResource {
	if o == nil {
		var ret AttachmentResource
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetAttachmentResponse) GetDataOk() (*AttachmentResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GetAttachmentResponse) SetData(v AttachmentResource) {
	o.Data = v
}

func (o GetAttachmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAttachmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *GetAttachmentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetAttachmentResponse := _GetAttachmentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetAttachmentResponse)

	if err != nil {
		return err
	}

	*o = GetAttachmentResponse(varGetAttachmentResponse)

	return err
}

type NullableGetAttachmentResponse struct {
	value *GetAttachmentResponse
	isSet bool
}

func (v NullableGetAttachmentResponse) Get() *GetAttachmentResponse {
	return v.value
}

func (v *NullableGetAttachmentResponse) Set(val *GetAttachmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAttachmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAttachmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAttachmentResponse(val *GetAttachmentResponse) *NullableGetAttachmentResponse {
	return &NullableGetAttachmentResponse{value: val, isSet: true}
}

func (v NullableGetAttachmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAttachmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
